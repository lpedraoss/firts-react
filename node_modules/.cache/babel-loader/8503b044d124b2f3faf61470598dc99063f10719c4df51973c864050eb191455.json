{"ast":null,"code":"var _jsxFileName = \"/home/dev24/Documentos/Proyectos React/firts-react/src/hooks/user.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction User() {\n  _s();\n  const [users, setUsers] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('https://mockapi.io/clone/646d4d739c677e232189e51b');\n      const jsonData = await response.json();\n      setUsers(jsonData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleCreate = async () => {\n    try {\n      const response = await fetch('https://mockapi.io/clone/646d4d739c677e232189e51b', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email\n        })\n      });\n      const newUser = await response.json();\n      setUsers([...users, newUser]);\n      setName('');\n      setEmail('');\n    } catch (error) {\n      console.error('Error creating user:', error);\n    }\n  };\n  const handleUpdate = async userId => {\n    try {\n      const response = await fetch(`https://mockapi.io/clone/646d4d739c677e232189e51b/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email\n        })\n      });\n      const updatedUser = await response.json();\n      const updatedUsers = users.map(user => user.id === userId ? updatedUser : user);\n      setUsers(updatedUsers);\n      setName('');\n      setEmail('');\n    } catch (error) {\n      console.error('Error updating user:', error);\n    }\n  };\n  const handleDelete = async userId => {\n    try {\n      await fetch(`https://mockapi.io/clone/646d4d739c677e232189e51b/${userId}`, {\n        method: 'DELETE'\n      });\n      const updatedUsers = users.filter(user => user.id !== userId);\n      setUsers(updatedUsers);\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), users ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), \" \", user.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), \" \", user.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdate(user.id),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(user.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(User, \"AQ/npzbXMUnqb7cLuLes6FsU9RQ=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","User","_s","users","setUsers","name","setName","email","setEmail","fetchData","response","fetch","jsonData","json","error","console","handleCreate","method","headers","body","JSON","stringify","newUser","handleUpdate","userId","updatedUser","updatedUsers","map","user","id","handleDelete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/dev24/Documentos/Proyectos React/firts-react/src/hooks/user.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\nfunction User() {\n  const [users, setUsers] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('https://mockapi.io/clone/646d4d739c677e232189e51b');\n      const jsonData = await response.json();\n      setUsers(jsonData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleCreate = async () => {\n    try {\n      const response = await fetch('https://mockapi.io/clone/646d4d739c677e232189e51b', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, email }),\n      });\n      const newUser = await response.json();\n      setUsers([...users, newUser]);\n      setName('');\n      setEmail('');\n    } catch (error) {\n      console.error('Error creating user:', error);\n    }\n  };\n\n  const handleUpdate = async (userId) => {\n    try {\n      const response = await fetch(`https://mockapi.io/clone/646d4d739c677e232189e51b/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, email }),\n      });\n      const updatedUser = await response.json();\n      const updatedUsers = users.map((user) => (user.id === userId ? updatedUser : user));\n      setUsers(updatedUsers);\n      setName('');\n      setEmail('');\n    } catch (error) {\n      console.error('Error updating user:', error);\n    }\n  };\n\n  const handleDelete = async (userId) => {\n    try {\n      await fetch(`https://mockapi.io/clone/646d4d739c677e232189e51b/${userId}`, {\n        method: 'DELETE',\n      });\n      const updatedUsers = users.filter((user) => user.id !== userId);\n      setUsers(updatedUsers);\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n\n  return (\n    <>\n      <section>\n        <h2>Create User</h2>\n        <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\n        <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <button onClick={handleCreate}>Create</button>\n      </section>\n\n      <section>\n        <h2>User List</h2>\n        {users ? (\n          <ul>\n            {users.map((user) => (\n              <li key={user.id}>\n                <strong>Name:</strong> {user.name}<br />\n                <strong>Email:</strong> {user.email}<br />\n                <button onClick={() => handleUpdate(user.id)}>Update</button>\n                <button onClick={() => handleDelete(user.id)}>Delete</button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>Loading data...</p>\n        )}\n      </section>\n    </>\n  );\n}\n\n\nexport default User;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}